// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Euro.PatientPortal.PatientPortalAPI.Test.APITest.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("RestAPIValidations")]
    public partial class RestAPIValidationsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RestAPIValidations.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RestAPIValidations", "\tAs a valid patient portal user,\r\n\tI want to verify if all the API\'s are working " +
                    "fine", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1 Verify AddPatientReportInfo api works fine Without Report")]
        [NUnit.Framework.TestCaseAttribute("NTD", "@GenerateRandomEmailWithDomain(\'dispostable.com\')", "Ajeesh kv COVID-19 IgG Test Report -286.pdf", null)]
        public virtual void _1VerifyAddPatientReportInfoApiWorksFineWithoutReport(string bu, string email, string reportname, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1 Verify AddPatientReportInfo api works fine Without Report", exampleTags);
#line 5
 this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.When(string.Format("user hits api \"AddPatientReportInfo\" without Report \"{0}\" for BU \"{1}\" and email " +
                        "\"{2}\" and save respose code by key \"resKey\"", reportname, bu, email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
 testRunner.Then("verify that resposnse code \"resKey\" is \"ok\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("2 Verify AddPatientReportInfo api works fine With Report")]
        [NUnit.Framework.TestCaseAttribute("NTD", "@GenerateRandomEmailWithDomain(\'dispostable.com\')", "Ajeesh kv COVID-19 IgG Test Report -286.pdf", null)]
        public virtual void _2VerifyAddPatientReportInfoApiWorksFineWithReport(string bu, string email, string reportname, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2 Verify AddPatientReportInfo api works fine With Report", exampleTags);
#line 13
   this.ScenarioSetup(scenarioInfo);
#line 14
 testRunner.When(string.Format("user hits api \"AddPatientReportInfo\" with Report \"{0}\" for BU \"{1}\" and email \"{2" +
                        "}\" and save respose code by key \"resKey\"", reportname, bu, email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then("verify that resposnse code \"resKey\" is \"ok\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

